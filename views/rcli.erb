<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>KWK Level 1 Helper</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css" integrity="sha384-WskhaSGFgHYWDcbwN70/dfYBj47jz9qbsMId/iRN3ewGhXQFZCSftd1LZCfmhktB" crossorigin="anonymous">
    <link href="https://fonts.googleapis.com/css?family=Open+Sans|Source+Code+Pro" rel="stylesheet">
    <link rel="stylesheet" href="/styles.css">
  </head>
  <body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
      <a class="navbar-brand" href="/">KWK Level 1 Helper</a>
      <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
    
      <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav mr-auto">
          <li class="nav-item active">
            <a class="nav-link" href="/">Home<span class="sr-only">(current)</span></a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/command_line">Command Line</a>
          </li>
          <li class="nav-item dropdown active">
            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
              Ruby
            </a>
            <div class="dropdown-menu" aria-labelledby="navbarDropdown">
              <a class="dropdown-item" href="/rintro">Intro to Ruby</a>
              <a class="dropdown-item" href="/rmethods">Ruby Methods</a>
              <a class="dropdown-item" href="/rlogic">Logic and Conditionals</a>
              <a class="dropdown-item" href="/rloops">Loops</a>
              <a class="dropdown-item" href="/rarrays">Arrays and Iteration</a>
              <a class="dropdown-item" href="/rhashes">Hashes and Iteration</a>
              <a class="dropdown-item" href="/rnested">Nested Data and Iteration</a>
              <a class="dropdown-item" href="/rcli">CLI Apps</a>
              <a class="dropdown-item" href="/roo">Object Orientation</a>
            </div>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/html">HTML</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/css">CSS</a>
          </li>
          <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
              HTML & CSS Life Hacks
            </a>
            <div class="dropdown-menu" aria-labelledby="navbarDropdown">
              <a class="dropdown-item" href="/bootstrap">Styling with Bootstrap</a>
              <a class="dropdown-item" href="/ui_gradients">Backgrounds with UI Gradients</a>
              <a class="dropdown-item" href="/google_fonts">Fonts with Google Fonts</a>
              <a class="dropdown-item" href="/icons">Icons with Font Awesome</a>
            </div>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/sinatra">Sinatra</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/advice">Advice</a>
          </li>
        </ul>
      </div>
    </nav>
    
    <h1 class="heading">Ruby</h1>
    <h3 class="subheader">Command Line Interface Applications</h3>
    
    <p class="info">
        <strong>The Command Line Interface</strong><br>
        The <strong><mark>CLI</mark></strong>, or <strong><mark>Command Line Interface</mark></strong>, is the way programmers interact with computers. It may seem weird or unnecessary at first, but it will become more convenient the more you program and soon these weird commands are going to just be second nature when you’re typing in your terminal. We’ve already talked about these commands in the Command Line section of the notes, so feel free to reference that if you forgot anything or just want a refresher.
        <br><br>
        A lot of this section is going to be review on things we have already learned; we're just putting it all together.
        <br><br>
        <strong>Capturing Input from the CLI</strong><br>
        We’ve already learned about the built in action <strong><code>puts</code></strong>, which prints out to the console for the user to see. We have also learned about the build in action <strong><code>gets</code></strong> when we want to prompt the user for user input. We learned about the difference between <strong><code>gets</code></strong> and <strong><code>gets.chomp</code></strong> or <strong><code>gets.strip</code></strong> as well. Feel free to go back and read on it, but in case you forgot, they basically remove the newline at the end of the user input so you don’t get anything funky when you try to use the input later on.
        <br><br>
        Something that we haven’t gone over before is <strong><code>\n</code></strong>. The <strong>\</strong> is called an ‘escaped character’. This signals the computer that the next character after this is going to be special. The <strong>n</strong> that follows tells the computer that it is a newline. So, whenever we print a string with this <strong><mark>newline character</mark></strong> <strong><code>\n</code></strong>, it will print out a new line in place of the character. This is just one of many special characters used to format strings and output. Feel free to do some investigating and Google some other special characters!
    </p>
    
    <img src="/images/cli1.jpeg" alt="Picture Ruby Command Line Interface App 1" style="width:800px;height:300px;padding-left:20px">
    
    <p class="info">
        <br>
        <strong>Connecting the CLI to Ruby</strong><br>
        In previous examples in the notes, we have taken user input and stored it into a variable to then be used in an outputted string with the use of interpolation. In this lesson, it is basically trying to reinforce the idea of taking in user input and using it somewhere else in your Ruby program.
        <br><br>
        <strong>Note:</strong> <strong><code>gets</code></strong> will take in user input and keep it as data with the type string. If we want to take in an integer and use it as an integer in our code later on (like doing math with it), we need to convert the input from the type string to the type integer. Do you remember how to do that? Feel free to check previous note sections or use Google to figure it out! It’s a simple method that can be applied to strings.
        <br><br>
        At this point, you’re ready to make your first CLI application! The prompt is creating your own calculator in a group. In my experience as a TA, students were able to finish this project pretty fast. Use your extra time to get creative and add different components to your calculator (make it themed, include advanced calculations like square roots or sine/cosine/tangent). Have fun and good luck! The next topic we will be covering is Object Orientation and that's a big one!
    </p>
    
    <br><br>
    <a class="btn btn-outline-primary btn-lg btn-block" href="/roo">Continue to Ruby Object Orientation</a>

  <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js" integrity="sha384-smHYKdLADwkXOn1EmN1qk/HfnUcbVRZyYmZ4qpPea6sjB/pTJ0euyQp0Mk8ck+5T" crossorigin="anonymous"></script>
  </body>
</html>